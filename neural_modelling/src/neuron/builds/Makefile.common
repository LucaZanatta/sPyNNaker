$(info ---------------------------------------------------------------------)
$(info Build configuration: $(CURDIR)/Makefile)
$(info )

# ---------------------------------------------------------------------

ifndef NEURON_MODEL
    $(error NEURON_MODEL is not set.  Please choose a neuron model to compile)
endif
ifndef NEURON_MODEL_H
    $(error NEURON_MODEL_H is not set.  Please select a neuron model header file)
endif
ifndef INPUT_TYPE_H
    $(error INPUT_TYPE_H is not set.  Please select an input type header file)
endif
ifndef THRESHOLD_TYPE_H
    $(error THRESHOLD_TYPE_H is not set.  Please select a threshold type header file)
endif
ifndef SYNAPSE_TYPE_H
    $(error SYNAPSE_TYPE_H is not set.  Please select a synapse type header file)
endif
ifndef SYNAPSE_DYNAMICS
    $(error SYNAPSE_DYNAMICS is not set.  Please select a synapse dynamics implementation)
endif
ifndef BUILD_DIR
    BUILD_DIR=build/
endif

# ---------------------------------------------------------------------

#POPULATION_TABLE_IMPL := fixed
POPULATION_TABLE_IMPL := binary_search

NEURON_MODEL_O = $(call build_dir, $(NEURON_MODEL))
NEURON_O = $(call build_dir, $(SOURCE_DIR)/neuron/neuron.c)
ifdef WEIGHT_DEPENDENCE
    WEIGHT_DEPENDENCE_O = $(call build_dir, $(WEIGHT_DEPENDENCE))
endif
ifdef TIMING_DEPENDENCE
    TIMING_DEPENDENCE_O = $(call build_dir, $(TIMING_DEPENDENCE))
endif
ifndef ADDITIONAL_INPUT_H
    ADDITIONAL_INPUT_H = $(SOURCE_DIR)/neuron/additional_inputs/additional_input_none_impl.h
endif

# ---------------------------------------------------------------------

CFLAGS += -I$(abspath build) -I$(abspath $(SOURCE_DIR))

SOURCES = \
	$(SOURCE_DIR)/common/out_spikes.c \
	$(SOURCE_DIR)/neuron/c_main.c \
	$(SOURCE_DIR)/neuron/synapses.c \
	$(SOURCE_DIR)/neuron/neuron.c \
	$(SOURCE_DIR)/neuron/spike_processing.c \
	$(SOURCE_DIR)/neuron/population_table/population_table_$(POPULATION_TABLE_IMPL)_impl.c \
	$(NEURON_MODEL) \
	$(SYNAPSE_DYNAMICS) \
	$(WEIGHT_DEPENDENCE) \
	$(TIMING_DEPENDENCE) \
	$(OTHER_SOURCES)

# These next three variables are used to set up build rules, but do not
# determine what files are actually required for the build.

SYNAPSE_TYPE_SOURCES += \
    $(SOURCE_DIR)/neuron/c_main.c \
    $(SOURCE_DIR)/neuron/synapses.c \
    $(SOURCE_DIR)/neuron/spike_processing.c \
    $(SOURCE_DIR)/neuron/population_table/population_table_fixed_impl.c \
    $(SOURCE_DIR)/neuron/population_table/population_table_binary_search_impl.c \
    $(SOURCE_DIR)/neuron/plasticity/synapse_dynamics_static_impl.c

STDP += $(wildcard $(SOURCE_DIR)/neuron/plasticity/*/*.c)
STDP += $(wildcard $(SOURCE_DIR)/neuron/plasticity/*/*/*.c)

NEURON_CORE += $(NEURON_MODEL) \
	$(SOURCE_DIR)/neuron/neuron.c \
	$(SOURCE_DIR)/common/out_spikes.c \
	build/%_build.c

# ---------------------------------------------------------------------

ifeq ($(SPYNNAKER_DEBUG), DEBUG)
    NEURON_DEBUG = LOG_DEBUG
    SYNAPSE_DEBUG = LOG_DEBUG
    PLASTIC_DEBUG = LOG_DEBUG
endif
ifndef NEURON_DEBUG
    NEURON_DEBUG = LOG_INFO
endif
ifndef SYNAPSE_DEBUG
    SYNAPSE_DEBUG = LOG_INFO
endif
ifndef PLASTIC_DEBUG
    PLASTIC_DEBUG = LOG_INFO
endif

# ---------------------------------------------------------------------

include ../../../Makefile.common

ifndef SOURCE_DIR
    $(error SOURCE_DIR must be set for this makefile to work.)
endif

# ---------------------------------------------------------------------

vpath %.h $(SOURCE_DIR):build
vpath %.tmpl $(SOURCE_DIR)/neuron

SYNAPSE_DEP = build/synapse_type.h $(SYNAPSE_TYPE_H)
define synapse_build
build/$(notdir $(1:.c=.o)): $(1) $(SYNAPSE_DEP)
	@-$$(MKDIR) $$(dir $$@)
	$$(CC) -D__FILENAME__=\"$$(notdir $$<)\" -DLOG_LEVEL=$$(strip $(2)) \
		$$(CFLAGS) -o $$@ $$<
endef

PLASTIC_DEP = build/weight.h $(WEIGHT_DEPENDENCE_H) \
			  build/timing.h $(TIMING_DEPENDENCE_H)
define plasticity_build
build/$(notdir $(1:.c=.o)): $(1) $(SYNAPSE_DEP) $(PLASTIC_DEP)
	@-$$(MKDIR) $$(dir $$@)
	$$(CC) -D__FILENAME__=\"$$(notdir $$<)\" -DLOG_LEVEL=$$(strip $(2)) \
		$$(CFLAGS) -o $$@ $$<
endef

NEURON_DEP = build/threshold_type.h	  $(THRESHOLD_TYPE_H) \
			 build/neuron_model.h	  $(NEURON_MODEL_H) \
			 build/additional_input.h $(ADDITIONAL_INPUT_H) \
			 build/input_type.h		  $(INPUT_TYPE_H)
define neuron_build
build/$(notdir $(1:.c=.o)): $(1) $(SYNAPSE_DEP) $(NEURON_DEP)
	@-$$(MKDIR) $$(dir $$@)
	$$(CC) -D__FILENAME__=\"$$(notdir $$<)\" -DLOG_LEVEL=$$(strip $(2)) \
		$$(CFLAGS) -o $$@ $$<
endef

$(foreach obj,$(SYNAPSE_TYPE_SOURCES), \
	$(eval $(call synapse_build, $(obj), $(SYNAPSE_DEBUG))))
$(foreach obj,$(STDP), \
	$(eval $(call plasticity_build, $(obj), $(PLASTIC_DEBUG))))
$(foreach obj, $(NEURON_CORE), \
	$(eval $(call neuron_build, $(obj), $(NEURON_DEBUG))))

# ---------------------------------------------------------------------
# Convert the filenames for interface implementations into actual
# includeable files.
# ---------------------------------------------------------------------

REPLACER=python $(abspath $(SOURCE_DIR)/../utils/replace.py)
define template_rule
build/$$(notdir $(1)).h: $(1).tmpl Makefile
	@-$$(MKDIR) $$(dir $$@)
	@echo replace $(2) in $(1).tmpl making $$@
	@$$(REPLACER) $(2) $$($(2)) $$< $$@
endef

$(eval $(call template_rule,additional_inputs/additional_input,ADDITIONAL_INPUT_H))
$(eval $(call template_rule,input_types/input_type,INPUT_TYPE_H))
$(eval $(call template_rule,models/neuron_model,NEURON_MODEL_H))
$(eval $(call template_rule,synapse_types/synapse_type,SYNAPSE_TYPE_H))
$(eval $(call template_rule,threshold_types/threshold_type,THRESHOLD_TYPE_H))
$(eval $(call template_rule,plasticity/stdp/timing_dependence/timing,TIMING_DEPENDENCE_H))
$(eval $(call template_rule,plasticity/stdp/weight_dependence/weight,WEIGHT_DEPENDENCE_H))
